<?xml version="1.0"?>
<robot name="i3e-d3" xmlns:xacro="http://www.ros.org/wiki/xacro">
    
    <arg name="robot_namespace" default="/"/>

    <xacro:property name="PI" value="3.14159"/>
    
    <!-- Included URDF/XACRO Files -->
    <xacro:include filename="$(find i3e-d3_description)/urdf/wheel.urdf.xacro"/>
    
    <!-- Base size -->
    <xacro:property name="base_x_size" value="0.35"/>
    <xacro:property name="base_y_size" value="0.25"/>
    <xacro:property name="base_z_size" value="0.085"/>
    
    <!-- Wheel Dimensions -->
    <xacro:property name="wheel_length" value="0.035"/>
    <xacro:property name="wheel_radius" value="0.04"/>
    <!-- Wheel Mounting Positions -->
    <!-- Need to adjust offsets -->
    <xacro:property name="wheel_x_offset" value="0.11"/>
    <xacro:property name="wheel_y_offset" value="${wheel_length/2 + 0.13}"/>
    <xacro:property name="wheel_z_offset" value="-0.03"/>

    <!-- Base link is the center of the robot -->
    <link name="base_link">
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
            </geometry>
            <material name="blue">
                <color rgba="0.0 0.0 1.0 1.0"/>
            </material>
        </visual>
        <collision> 
            <!-- Need to adjust collision origin -->
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="${base_x_size} ${base_y_size} ${base_z_size}"/>
            </geometry>
        </collision>
    </link>

    <!-- Base footprint link is on the ground under the robot-->
    <link name="base_footprint"/>
    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0.0 0.0 ${wheel_z_offset - wheel_radius}" rpy="0.0 0.0 0.0"/>
        <parent link="base_link"/>
        <child link="base_footprint"/>
    </joint>    
    
    <!-- Base inertial link -->
    <link name="inertial_link">
        <inertial>
            <!-- Need to adjust all inertia matrix -->
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <mass value="7.824"/>
            <inertia ixx="0.04546" ixy="0.0" ixz="0.0" iyy="0.08458" iyz="0.0" izz="0.1206"/>
        </inertial>    
    </link>

    <joint name="inertial_joint" type="fixed">
        <parent link="base_link"/>
        <child link="inertial_link"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </joint>
    
    <!-- I3E-D3 wheel macros -->
    <xacro:i3e-d3_wheel prefix="front_left">
        <origin xyz="${wheel_x_offset} ${wheel_y_offset} ${wheel_z_offset}" rpy="0.0 0.0 0.0"/>
    </xacro:i3e-d3_wheel>
    <xacro:i3e-d3_wheel prefix="front_right">
        <origin xyz="${wheel_x_offset} ${-wheel_y_offset} ${wheel_z_offset}" rpy="0.0 0.0 0.0"/>
    </xacro:i3e-d3_wheel>
    <xacro:i3e-d3_wheel prefix="rear_left">
        <origin xyz="${-wheel_x_offset} ${wheel_y_offset} ${wheel_z_offset}" rpy="0.0 0.0 0.0"/>
    </xacro:i3e-d3_wheel>
    <xacro:i3e-d3_wheel prefix="rear_right">
        <origin xyz="${-wheel_x_offset} ${-wheel_y_offset} ${wheel_z_offset}" rpy="0.0 0.0 0.0"/>
    </xacro:i3e-d3_wheel>

    <!-- Gazebo ROS Control Plugin -->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>$(arg robot_namespace)</robotNamespace>
            <legacyModeNS>true</legacyModeNS>
        </plugin>
    </gazebo>
    
</robot>
